#spring.resources.static-locations=classpath:/static/
spring.datasource.url=jdbc:mysql://localhost:3306/new_schema?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8 
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#页面热加载
spring.thymeleaf.cache=false
#端口
server.port=8086
#  激活开发环境111      1120201126
spring.profiles.active=dev
jdbc.maxIdleTime=14400 
idleConnectionTestPeriod=1800
#Redis
#spring.redis.host=127.0.0.1
redis.host=127.0.0.1
## Redis服务器连接端口
redis.port=6379
## 连接超时时间（毫秒）
redis.timeout=3
## Redis服务器连接密码（默认为空）
redis.password=
## 连接池中的最大连接数
redis.poolMaxTotal=10
## 连接池中的最大空闲连接
redis.poolMaxIdle=10
## 连接池最大阻塞等待时间（使用负值表示没有限制）
redis.poolMaxWait=3

#单个数据的大小
spring.servlet.multipart.maxFileSize=100MB
#总数据的大小
spring.servlet.multipart.maxRequestSize=100MB

#文件上传后存储路径：D:\home\capture\5\*.jpg(具体配置如下)
#访问Url:http://ip:port/hg-zhwg/upload/5/*.jpg

#文件上传目录(window是d/e/f盘， linux是/)（注意Linux和Windows上的目录结构不同）
#file.uploadFolder=/
file.uploadFolder=d://
# 设备截图文件保存路径(文件存在具体的文件夹的路径)
zhwg.captrue.image.path=home/capture/
#静态资源对外暴露的访问路径(访问图片的路径)
file. =/upload/**
#――――――――――――――――
#版权声明：本文为CSDN博主「但-嘎嘎嘎」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。
#原文链接：https://blog.csdn.net/m0_37598340/article/details/86510084
#http://localhost:8888/Springbootfour/target/classes/static/upload/fluter.png
# redis配置
# Redis服务器地址
#//-----------------------------------------
#spring.redis.host=192.168.110.1
## Redis服务器连接端口
##spring.redis.port=8895
#spring.redis.port=6379
## Redis服务器连接密码
##spring.redis.password=123456
## 连接池最大连接数（使用负值表示没有限制）
#spring.redis.jedis.pool.max-active=8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.jedis.pool.max-wait=-1
## 连接池中的最大空闲连接
#spring.redis.jedis.pool.max-idle=20
## 连接池中的最小空闲连接
#spring.redis.jedis.pool.min-idle=0
## 连接超时时间（毫秒）
#spring.redis.timeout=5000
#――――――――――――――――
#版权声明：本文为CSDN博主「请叫我小思」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
#原文链接：https://blog.csdn.net/zeal9s/java/article/details/86620336
spring.main.allow-bean-definition-overriding=true
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.resources.static-locations=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
spring.thymeleaf.mode=HTML5


#spring:
datasource:
url: jdbc:mysql://localhost:3306/testdb?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&rewriteBatchedStatements=true&useSSL=false&serverTimezone=GMT%2B8
username: root
password: root

spring.flyway.baseline-on-migrate=true
# 下面几个配置不写也行，都是默认配置，这里写了是方便以后改
# 执行基线时用来标记已有Schema的版本。（默认值：1）
spring.flyway.baseline-version=1
spring.flyway.enabled=true
spring.flyway.sql-migration-prefix=V
spring.flyway.locations=classpath:db/migration
spring:
# 数据库连接配置
flyway:
# 是否启用flyway
enabled: true
# 编码格式，默认UTF-8
encoding: UTF-8
# 迁移sql脚本文件存放路径，默认db/migration
locations: classpath:db/migration
# 迁移sql脚本文件名称的前缀，默认V
sql-migration-prefix: V
# 迁移sql脚本文件名称的分隔符，默认2个下划线__
sql-migration-separator: __
# 迁移sql脚本文件名称的后缀
sql-migration-suffixes: .sql
# 迁移时是否进行校验，默认true
validate-on-migrate: true
# 当迁移发现数据库非空且存在没有元数据的表时，自动执行基准迁移，新建schema_version表
baseline-on-migrate: true

flyway.locations=classpath:/db/migration

#开启驼峰命名转换
#mybatis.configuration.map-underscore-to-camel-case=true
pagehelper:
helperDialect: mysql
reasonable: true
supportMethodsArguments: true
params: count=countSql